// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model MediaAttachment {
  id          String   @id @db.VarChar(21)
  filename    String
  width       Float
  height      Float
  blurDataUri String   @map("blur_data_uri") @db.Text
  bucket      String?
  remoteUrl   String?  @map("remote_url")
  createdAt   DateTime @map("created_at")
  updatedAt   DateTime @map("updated_at")

  performer    Performer[]
  organization Organization[]
  stream       Stream[]

  @@index([filename])
  @@map("media_attachments")
}

model Stream {
  id          String  @id @db.VarChar(21)
  url         String  @unique
  title       String
  description String? @db.Text

  createdAt DateTime  @map("created_at")
  updatedAt DateTime  @map("updated_at")
  startedAt DateTime  @map("started_at")
  endedAt   DateTime? @map("ended_at")

  channelId String  @map("channel_id")
  channel   Channel @relation(fields: [channelId], references: [id])

  ownerId String    @map("owner_id")
  owner   Performer @relation(fields: [ownerId], references: [id])

  thumbnail   MediaAttachment? @relation(fields: [thumbnailId], references: [id])
  thumbnailId String?          @map("thumbnail_id")

  @@index([url])
  @@index([createdAt])
  @@index([updatedAt])
  @@index([startedAt])
  @@index([endedAt])
  @@index([ownerId])
  @@map("streams")
}

model Performer {
  id          String  @id @unique @db.VarChar(21)
  name        String
  color       String
  url         String?
  description String? @db.Text

  youtubeChannelId String? @unique @map("youtube_channel_id")
  twitterUsername  String? @unique @map("twitter_username")

  avatar   MediaAttachment? @relation(fields: [avatarId], references: [id])
  avatarId String?          @map("avatar_id")

  organizationId String?       @map("organization_id")
  organization   Organization? @relation(fields: [organizationId], references: [id])

  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")

  streams  Stream[]
  channels Channel[]

  @@index([organizationId])
  @@index([youtubeChannelId])
  @@index([twitterUsername])
  @@map("performers")
}

model Organization {
  id          String  @id @unique @db.VarChar(21)
  name        String
  color       String
  url         String?
  description String? @db.Text

  youtubeChannelId String? @unique @map("youtube_channel_id")
  twitterUsername  String? @unique @map("twitter_username")

  avatar   MediaAttachment? @relation(fields: [avatarId], references: [id])
  avatarId String?          @map("avatar_id")

  performers Performer[]

  createdAt DateTime  @map("created_at")
  updatedAt DateTime  @map("updated_at")
  channels  Channel[]

  @@index([youtubeChannelId])
  @@index([twitterUsername])
  @@map("organizations")
}

model Channel {
  id          String  @id @db.VarChar(21)
  name        String
  status      String
  description String? @db.Text

  performerId    String?       @map("performer_id")
  performer      Performer?    @relation(fields: [performerId], references: [id])
  organizationId String?       @map("organization_id")
  organization   Organization? @relation(fields: [organizationId], references: [id])

  youtubeChannel YoutubeChannel?
  streams        Stream[]

  @@index([performerId, organizationId])
  @@map("channels")
}

model YoutubeChannel {
  id               String  @id @db.VarChar(21)
  youtubeChannelId String  @unique
  channel          Channel @relation(fields: [id], references: [id])

  @@index([youtubeChannelId])
  @@map("youtube_channels")
}

model Token {
  id        String   @id @unique @db.VarChar(64)
  createdAt DateTime @map("created_at")
  expiresAt DateTime @map("expires_at")

  @@map("tokens")
}

model User {
  id           String   @id @unique @db.VarChar(21)
  email        String   @unique
  passwordHash String   @map("password_hash")
  createdAt    DateTime @map("created_at")
  updatedAt    DateTime @map("updated_at")

  @@map("users")
}
